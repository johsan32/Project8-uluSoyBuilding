@mixin clearfix {
    &::after {
        content: "";
        display: table;
        clear: both;
    }
}

@mixin absCenter {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}


// MEDIA QUERY MANAGER
/*
0 - 600px:      Phone
600 - 900px:    Tablet portrait
900 - 1200px:   Tablet landscape
[1200 - 1800] is where our normal styles apply
1800px + :      Big desktop

$breakpoint arguement choices:
- phone
- tab-port
- tab-land
- big-desktop

ORDER: Base + typography > general layout + grid > page layout > components

1em = 16px
*/
@mixin respond($breakpoint) {
    @if $breakpoint == phone {
        @media only screen and (max-width: 37.5em) { @content };    //600px
    }
    @if $breakpoint == tab-port {
        @media only screen and (max-width: 56.25em) { @content };     //900px
    }
    @if $breakpoint == tab-land {
        @media only screen and (max-width: 75em) { @content };    //1200px
    }
    @if $breakpoint == big-desktop {
        @media only screen and (min-width: 112.5em) { @content };    //1800
    }
}

@mixin btn-anime{
    .btn {
        &,
        &:link,
        &:visited {
            text-transform: uppercase;
            text-decoration: none;
            padding: 1.5rem 4rem;
            display: inline-block;
            border-radius: 10rem;
            transition: all .2s;
            position: relative;
            font-size: $default-font-size;
    
            //Change for the <button> element
            border: none;
            cursor: pointer;
        }
        
        &:hover {
            transform: translateY(-3px);
            box-shadow: 0 1rem 2rem rgba($color-dark,.2);
    
            &::after {
                transform: scaleX(1.4) scaleY(1.6);
                opacity: 0;
            }
        }
        
        &:active,
        &:focus {
            outline: none;
            transform: translateY(-1px);
            box-shadow: 0 .5rem 1rem rgba($color-dark,.2);
        }
        
        &--white {
            background-color: $color-white;
            color: $color-theme-dark-second;
    
            &::after {
                background-color: $color-white;
            }
        }
    
        &--green {
            background-color: $color-theme-light-first;
            color: $color-white;
    
            &::after {
                background-color: $color-theme-light-first;
            }
        }
        
        &::after {
            content: "";
            display: inline-block;
            height: 100%;
            width: 100%;
            border-radius: 10rem;
            position: absolute;
            top: 0;
            left: 0;
            z-index: -1;
            transition: all .4s;
        }
        
        &--animated {
            animation: moveInBottom .5s ease-out .75s;
            animation-fill-mode: backwards;
        }
    }
    
    .btn-text {
        &:link,
        &:visited {
            font-size: $default-font-size;
            color: $color-theme-light-first;
            display: inline-block;
            text-decoration: none;
            border-bottom: 1px solid $color-theme-light-first;
            padding: 3px;
            transition: all .2s;
        }
    
        &:hover {
            background-color: $color-theme-light-first;
            color: $color-white;
            box-shadow: 0 1rem 2rem rgba($color-dark, .15);
            transform: translateY(-2px);
        }
    
        &:active {
            box-shadow: 0 .5rem 1rem rgba($color-dark, .15);
            transform: translateY(0);
        }
    }
}